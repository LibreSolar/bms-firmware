/*
 * Copyright (c) The Libre Solar Project Contributors
 *
 * SPDX-License-Identifier: Apache-2.0
 */

/dts-v1/;
#include <st/f0/stm32f072Xb.dtsi>
#include <st/f0/stm32f072c(8-b)tx-pinctrl.dtsi>

/ {
	model = "Libre Solar BMS OKAI";
	compatible = "st,stm32f072";

	pcb {
		compatible = "bms";

		type = "OKAI";
		version-str = "v0.1";
		version-num = <1>;

		/* adjust via overlay if bq76940 is used */
		num-cells-max = <13>;
		num-thermistors-max = <3>;

		current-max = <80>;
		shunt-res = <1500>;

		/*
		 * Additional information:
		 * - GAIN_PACK_VOLTAGE (105.6/5.6)
		 * - PIN_V_BAT    PA_4
		 * - PIN_V_EXT    PA_5
		 */
	};

	chosen {
		zephyr,console = &usart3;
		zephyr,shell-uart = &usart3;
		zephyr,sram = &sram0;
		zephyr,flash = &flash0;
	};

	leds {
		compatible = "gpio-leds";
		led1: led_0 {
			gpios = <&gpioa 9 GPIO_ACTIVE_HIGH>;
			label = "LED 1";
		};
		led2: led_1 {
			gpios = <&gpioa 10 GPIO_ACTIVE_HIGH>;
			label = "LED 2";
		};
	};

	gpio_keys {
		compatible = "gpio-keys";
		power_button: button {
			label = "Power Button";
			gpios = <&gpioa 8 GPIO_ACTIVE_HIGH>;
		};
	};

	switches {
		compatible = "switch";
		can_en {
			gpios = <&gpiob 15 GPIO_ACTIVE_LOW>;
			label = "CAN transceiver enable";
		};
		/*pchg_en {
			gpios = <&gpiob 2 GPIO_ACTIVE_HIGH>;
			label = "PCHG enable pin";
		};*/
	};

	aliases {
		led-red = &led1;
		led-green = &led2;
		uart-dbg = &usart3;
		uart-uext = &usart2;
		i2c-uext = &i2c1;
		sw-pwr = &power_button;
	};

	io-pwr-ctrl {
		compatible = "regulator-fixed-sync";
		label = "io-pwr-ctrl";
		regulator-name = "io-pwr-ctrl";
		enable-gpios = <&gpiob 2 GPIO_ACTIVE_HIGH>;
		regulator-boot-on;
		status = "okay";
	};

	soc {
		usart3: serial@40004800 {
			compatible = "st,stm32-usart", "st,stm32-uart";
			reg = <0x40004800 0x400>;
			clocks = <&rcc STM32_CLOCK_BUS_APB1 0x00040000>;
			interrupts = <29 0>;
			status = "disabled";
			label = "UART_3";
		};
		usart4: serial@40004c00 {
			compatible = "st,stm32-usart", "st,stm32-uart";
			reg = <0x40004c00 0x400>;
			clocks = <&rcc STM32_CLOCK_BUS_APB1 0x00080000>;
			interrupts = <29 0>;
			status = "disabled";
			label = "UART_4";
		};
	};
};

&clk_hsi {
	status = "okay";
};

&pll {
	clocks = <&clk_hsi>;
	prediv = <1>;
	mul = <6>;
	status = "okay";
};

&rcc {
	clocks = <&pll>;
	clock-frequency = <DT_FREQ_M(48)>;
	ahb-prescaler = <1>;
	apb1-prescaler = <1>;
};

&usart2 {
	pinctrl-0 = <&usart2_tx_pa2 &usart2_rx_pa3>;
	pinctrl-names = "default";
	current-speed = <115200>;
	status = "okay";
};

&usart2_rx_pa3 {
	bias-pull-up;	// avoid junk characters if pin is left floating
};

&usart3 {
	pinctrl-0 = <&usart3_tx_pb10 &usart3_rx_pb11>;
	pinctrl-names = "default";
	current-speed = <115200>;
	status = "okay";
};

&usart3_rx_pb11 {
	bias-pull-up;	// avoid junk characters if pin is left floating
};

&i2c1 {
	pinctrl-0 = <&i2c1_scl_pb6 &i2c1_sda_pb7>;
	pinctrl-names = "default";
	status = "okay";

	bq769x0@8 {
		compatible = "ti,bq769x0";
		label = "BQ76940";
		reg = <0x08>;     // ignored (firmware will auto-detect I2C address)
		alert-gpios = <&gpiob 12 GPIO_ACTIVE_HIGH>;
	};
};

&spi1 {
	pinctrl-0 = <&spi1_sck_pb3 &spi1_miso_pb4 &spi1_mosi_pb5>;
	pinctrl-names = "default";
	cs-gpios = <&gpioa 15 GPIO_ACTIVE_LOW>;
	status = "okay";

	/*eeprom@0 {
		// M25Q 16A
		compatible = "atmel,at25";
		reg = <0x0>;	// 1 0 1 0 A2 A1 A0 = 1010001
		label = "EEPROM_0";
		size = <32768>;
		pagesize = <64>;
		address-width = <16>;
		timeout = <7>;
		spi-max-frequency = <DT_FREQ_M(1)>;
	};*/
};

&iwdg {
	status = "okay";
};

//&adc1 {
//	pinctrl-names = "default";
//status = "okay";
	//vin-supply ="io-pwr-ctrl";
//};

&can1 {
	pinctrl-0 = <&can_rx_pa11 &can_tx_pa12>;
	pinctrl-names = "default";
	bus-speed = <500000>;
	status = "okay";
	//supply-gpios = <&gpiob 15 GPIO_ACTIVE_HIGH>;
};

/*
display_power {
	compatible="regulator-fixed-syn";
	label = "display-pwr-ctrl";
	regulator-name = "display-pwr-ctrl";
	enable-gpios = <&gpioc 14 GPIO_ACTIVE_HIGH>;
	regulator-boot-on;
	status = "okay";
};*/